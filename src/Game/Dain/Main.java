package Game.Dain;

import java.util.ArrayList;
import java.util.Scanner;

import Game.GameDAO.CinemaDataTable;
import Game.GameDAO.CinemaQuizDataTable;
import javazoom.jl.player.MP3Player;

public class Main {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		// 영화들을 필드로 저장
		ArrayList<CinemaField> cinemasList = new ArrayList<CinemaField>();
		String comPath = "data\\song\\";
		MP3Player mp3 = new MP3Player();		

		try {
			cinemasList = CinemaDataTable.getInstance(comPath).getCinemaList();
			mp3.play(comPath + "opening.mp3");
			print("\n\n\n\n\n\n\n\n\n\n\n  ====================================================================================\n");
			Thread.sleep(100); // 0.1초 대기
			System.out.print(
					"                                                                                      \n");
			Thread.sleep(100);
			System.out.print(
					"   ██████╗██╗███╗   ██╗███████╗███╗   ███╗ █████╗      ██████╗ ██╗   ██╗██╗███████╗██╗\n");
			Thread.sleep(100);
			System.out.print(
					"  ██╔════╝██║████╗  ██║██╔════╝████╗ ████║██╔══██╗    ██╔═══██╗██║   ██║██║╚══███╔╝██║\n");
			Thread.sleep(100);
			System.out.print(
					"  ██║     ██║██╔██╗ ██║█████╗  ██╔████╔██║███████║    ██║   ██║██║   ██║██║  ███╔╝ ██║\n"); // 5
			Thread.sleep(100);
			System.out.print(
					"  ██║     ██║██║╚██╗██║██╔══╝  ██║╚██╔╝██║██╔══██║    ██║▄▄ ██║██║   ██║██║ ███╔╝  ╚═╝\n");
			Thread.sleep(100);
			System.out.print(
					"  ╚██████╗██║██║ ╚████║███████╗██║ ╚═╝ ██║██║  ██║    ╚██████╔╝╚██████╔╝██║███████╗██╗\n");
			Thread.sleep(100);
			System.out.print(
					"   ╚═════╝╚═╝╚═╝  ╚═══╝╚══════╝╚═╝     ╚═╝╚═╝  ╚═╝     ╚══▀▀═╝  ╚═════╝ ╚═╝╚══════╝╚═╝\n");
			Thread.sleep(100);
			System.out.print("                                     영화 퀴즈                                  \n");
			Thread.sleep(100);
			System.out.print(
					"  ====================================================================================\n");
			System.out.print("                                    LOADING....                             \n"); // 10

			String line = "  ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■\n";
			int timeLap = 200; // 시간 간격 (200밀리초)

			for (int i = 0; i < line.length(); i++) {
				System.out.print(line.charAt(i));
				try {
					Thread.sleep(10);
				} catch (InterruptedException e) {
					e.printStackTrace();
				}
			}
			System.out.println("                                    로딩 완료!!                                          ");
			System.out.println();
			System.out.println();

			try {
				Thread.sleep(200);
				System.out.print("    게임 설명을 보시겠습니까?      ");
				System.out.print("    [1] YES         [2] NO     ");
				System.out.println();
				System.out.println();
				String gameRule = sc.nextLine();
				if (gameRule.equals("1")) {
					System.out.printf("\n\n\n\n\n\n\n\n");
					System.out.println(
							"                                               |										\n"
									+ "                                    ___________I____________							\n"
									+ "                                    ( _____________________ ()						\n"
									+ "                                 _.-' |                    ||						\n"
									+ "                             _.-'    ||    2초간 재생되는      ||						\n"
									+ "            ______       _.-'        ||                    ||                        \n"
									+ "           |      |_ _.-'            ||      음악을 듣고      ||                        \n"
									+ "           |      |_|_               ||                    ||                        \n"
									+ "           |______|   `-._           ||      영화 제목을      ||                        \n"
									+ "               /\\          `-._      ||                    ||						\n"
									+ "              /  \\             `-._  ||      맞춰주세요~!     ||						\n"
									+ "             /    \\                `-.I____________________||						\n"
									+ "            /      \\                 ------------------------						\n"
									+ "           /________\\___________________/________________\\______					\n");
					System.out.printf("\n\n\n\n\n\n\n\n\n\n\n");
				}
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
			try {
				System.out.printf("\n%s\n\n\n", "    게임을 시작하시겠습니까?      " + "[1] YES         [2] NO     ");
				String gameStart = sc.nextLine();
				if (gameStart.equals("1")) {
					if (mp3.isPlaying()) {
						mp3.stop();
					}
					questions(1);
				} else {
					Thread.sleep(timeLap);
					System.out.println();
					System.out.println();
					System.out.println("    왜왜!! 내 게임이 얼마나 재밌는데... ( 게임강제시작!! ) ");
					Thread.sleep(timeLap);
					questions(1);
				}
				Thread.sleep(timeLap);
				while (true) {
					int playMusic = inputNum(sc);
					if (playMusic == 1) {
						mp3.play(cinemasList.get(0).getMovieSongFileName());
					} else if (playMusic == 2) {
						try {
							System.out.print("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣤⣴⢴⡶⣴⣤⣠⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
									+ "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠋⣼⣿⣿⣸⡇⣾⣿⣄⠘⢷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
									+ "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡇⠀⣿⣿⣿⣿⣆⣿⣾⠇⣢⣸⣗⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
									+ "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣽⣷⠀⢿⣽⣿⣿⣿⣿⣿⡤⢻⣹⣿⡅⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
									+ "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣥⣾⣿⣿⣿⡯⣿⣿⣷⣷⣿⣿⡷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
									+ "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⣿⣿⣿⣽⣿⣷⣿⣿⠃⣿⣿⣿⣿⣧⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
									+ "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣽⣿⣿⣿⣿⣿⣛⡿⢿⣷⡗⣾⣿⣿⣿⣿⣗⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
									+ "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢼⣿⣿⣿⣿⣿⣿⣿⣷⣾⣯⣷⢿⣿⣿⣿⣿⣯⡧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
									+ "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢐⣿⣿⣿⣿⣿⣿⣾⣿⣿⣿⣿⣿⣟⣿⣿⣿⣿⣿⣿⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
									+ "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
									+ "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠙⠛⠻⣿⣿⣿⣿⣿⣿⣿⣿⣭⣿⣿⣿⣿⣷⣦⣄⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
									+ "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣨⣿⢿⠿⢝⣿⣷⣾⣿⠫⠛⠿⣻⣿⣿⣿⣿⣿⣿⣿⣶⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
									+ "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⡟⡓⡼⢾⣿⣿⡿⢁⠠⣡⣾⠟⠡⠀⣠⣾⣿⣟⣿⣿⣿⣿⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
									+ "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣘⣿⣿⡩⢱⢁⡾⣻⠏⠠⢂⣽⡿⢓⠀⣣⣾⣿⣿⣿⣷⡬⣿⣿⣿⣿⣄⠀⠀⠀⠀⠀⠀⠀⠀\n"
									+ "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⢂⡿⢢⣼⣿⣣⢢⢃⠋⢽⠏⠀⣠⣿⠟⡐⢢⣡⣿⣿⣿⣿⣿⣿⡿⣿⣿⣿⣿⣿⣦⠀⠀⠀⠀⠀⠀⠀\n"
									+ "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠎⣿⡋⣵⢠⢧⡎⡎⠬⣼⣏⣠⣴⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⠐⣿⣿⣿⣿⣿⡅⠀⠀⠀⠀⠀⠀\n"
									+ "⠀⠀⠀⠀⠀⠀⠀⠀⠀⢐⢣⣲⣏⣮⣏⣥⣵⣾⣶⣿⣟⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣆⣸⣿⣿⣿⣿⣷⡄⠀⠀⠀⠀⠀\n"
									+ "⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⣿⣿⣿⣿⣿⣿⣿⣿⣹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣯⠀⠀⠀⠀⠀\n"
									+ "⠀⠀⠀⠀⠀⠀⠀⠀⢸⡿⢷⣿⣿⡟⣿⣷⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡃⠀⠀⠀⠀\n"
									+ "⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣿⣿⡧⣿⣿⢿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⠀⠀⠀⠀\n"
									+ "⠀⠀⠀⠀⠀⠀⠀⠀⠈⢹⣿⣿⣿⣷⣗⣿⣸⣵⣿⡧⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⡀⠀⠀⠀\n"
									+ "⠀⠀⠀⠀⠀⠀⠀⠀⣠⣿⣿⣿⣿⣽⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⠀⠀\n"
									+ "⠀⠀⠀⠀⠀⠀⠀⢀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⣿⣿⣿⣿⡷⠀⠀⠀\n"
									+ "⠀⠀⠀⠀⠀⠀⢀⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⣾⣻⣿⣿⣿⣿⡀⠀⠀\n");
							Thread.sleep(200);
							System.out.print("     ██ ███    ███     ██    ██  ██████  ██    ██ ██████           \n");
							Thread.sleep(200);
							System.out.print("     ██ ████  ████      ██  ██  ██    ██ ██    ██ ██   ██          \n");
							Thread.sleep(200);
							System.out.print("     ██ ██ ████ ██       ████   ██    ██ ██    ██ ██████           \n");
							Thread.sleep(200);
							System.out.print("     ██ ██  ██  ██        ██    ██    ██ ██    ██ ██   ██          \n");
							Thread.sleep(200);
							System.out.print("     ██ ██      ██        ██     ██████   ██████  ██   ██ ██ ██ ██ \n");

						} catch (InterruptedException e) {
							e.printStackTrace();
						}
					} else if (playMusic == 3) {
						mp3.play(comPath + "01_other.mp3");
					} else if (playMusic == 4) {
						System.out.println("     다음 문제로 넘어갑니다...     ");
						break;
					}
					if (answers(1, sc, cinemasList, mp3, comPath))
						break;
				}
			} catch (Exception e) {
				e.printStackTrace();
			}
			questions(2);
			while (true) {
				int playMusic = inputNum(sc);
				if (playMusic == 1) {
					mp3.play(cinemasList.get(1).getMovieSongFileName());
				} else if (playMusic == 2) {
					try {
						System.out.print("~!!~~~~^^^^~!7~^??^^::::::::::::::::::::::::::^^^^^^^^^^^^^^\n"
								+ "!~~~~~~?7~!7J77~7YPJ~~:::::::::::::::::::::^^^^^^^^^^^^^^^^^\n"
								+ "!~~~~~5BYY?!7!~!777?5?:::::::::::::::::::::^^^^^^^^^^^::^^^^\n"
								+ "~~~~~5#BBBGPP5?77?JJ?^:::::::::::::::::::::^^^:^^^^^^^::::::\n"
								+ "~~~^?#BB##GJ5J5PG5?7?7~~7~^::::::::::::::::^^^::::^^::::::::\n"
								+ "^^^^7GBB##BBBGGGBGP555PPGG5~::::::::::::::^^^^::::::::::::::\n"
								+ "^^^^^Y#B#BBBGGBGGGGGPPPP5JJ!~!!^::::::::::::::::::::::::::::\n"
								+ "^^^^:JBBGPPPPGGB#BGBGPPPP5J?7?J57:::::::::::::::::::::::::::\n"
								+ "P57!~?GGGPPBBBB##BGGGBGGPPPJ77!?5?!^.:::::::::::::::::::::::\n"
								+ "&##BGGGGGBBB#####BBGGGGGBGG5YJ?77??Y?^.:::::::::::::::::::::\n"
								+ "#####GBBBB#######BBGGGGGGBBB5??7777JP5!::::::::::::::.......\n"
								+ "##########BJ7P###BBBGGGGGGGBBY7??777JP5::::..........:^~!7^.\n"
								+ "?YPB##&##Y~..:!P##BBGGGGGGGGBB?!77???YB!........:^::~J5P5PJ~\n"
								+ ":::^!?J?~:::::.:JBBBBBGGGGGGGB57!!77??55~!!7???J5P5YPY55YPP!\n"
								+ "::::::..::::::::.?BBBBBGGGGGBBGJ??7777?5GGGPPGGGGGGGGJ!!!~^.\n"
								+ "::::::::::::::::::P#BBBBGGBBBGBBBBBGGP5PPGGGGGBBBBBPY~ .....\n"
								+ ":::::::::::::::::.Y#BBGGGBBBBBBGGGGB#&&&#GGGGPPPPPY:........\n"
								+ ":::::::::::::::..:PBGGGGBBBBBBBGGGGGBBB###?:::::::..........\n"
								+ "::::::::...:::...:PBGGGGBBBBBBBGGGGGBBBB##B7................\n"
								+ ":::::::...:....::~GBGGGGGBBBBBBBGGGGBBBBB###7...............\n"
								+ "::^~~~^::::...:::7BBBGGGGBBBBBBGBGGGBBBBBBB##7..............\n"
								+ "^^~7!~^:::::::^^^YBBGGGGBBBBB#BGGGGBB#####BBBP?:....:::....:\n"
								+ "~~!7777!^:::::^^~PBBBB########BGGBBBBB##BB##BGGP?^...:::...^\n"
								+ "!!777??7~^^^:^~~7B###########BGGBBBBB###B###BGGGGP?^::::...!\n"
								+ "!77777?7~~~~~~~~!JPB###&#####BGBBBBBB######BBBBGGGGPJ!::.::!\n"
								+ "!777777!!!!!!!!~~~~!?JY5PG##BBBBBBGBB#############BGGPY!:::7\n"
								+ "!7????~~!!!!!!!!!!!!7777??G#BBGGGGGGB#####BBBBBBBBGGGGGG5!:~\n"
								+ "?JJJ??~~!!!!!!!!!!!!777???G#BBGGGGGBB#BGGB######BBBBGGGGGGY!\n"
								+ "YYYJ??7!!7?77777!!77?????5##BBGGGGBB##G???JYPGBBBBB#BBBBBGBP\n"
								+ "YYJJJJJYJJYJ?7777???????YB#BBGGGGBBB#BY?!!!!!7?YP#BBGGGGGGGG\n"
								+ "JJJJJJJYYYYYJ????JJJ?77?JG#BBBBBB###B5??!!!!!!!!!5BBGGGGGGG5\n");
						Thread.sleep(200);
					} catch (InterruptedException e) {
						e.printStackTrace();
					}
				} else if (playMusic == 3) {
					mp3.play(comPath + "02_other.mp3");
				} else if (playMusic == 4) {
					System.out.println("     다음 문제로 넘어갑니다...     ");
					break;
				}
				if (answers(2, sc, cinemasList, mp3, comPath))
					break;
			}
			questions(3);
			while (true) {
				int playMusic = inputNum(sc);
				if (playMusic == 1) {
					mp3.play(cinemasList.get(2).getMovieSongFileName());
				} else if (playMusic == 2) {
					try {
						System.out.print("⣿⣿⣿⣿⣿⣿⣿⠟⠛⠛⠋⠉⠉⠉⠉⠉⠉⠁⠀⠀⠀⠀⠀⣐⠚⢋⣶⣶⣿⣯⣀⣀⣀⣸⣷⣄⡀⠀⠀⠀⠀⠀⢸⣿⣿⡿⠋⠉⠉⠉⠉⠉⢉⣿⣿⣿⣿⣿⣿⣿⣿⣆⠀⢩⣀\n"
								+ "⣿⣿⣿⣿⣿⣿⣉⣤⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠉⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣶⣤⡀⠀⠈⣿⣿⡧⠀⢀⠀⠀⠀⠀⣽⣿⣿⣿⣿⣿⣿⣿⣿⣿⣦⣸⣿\n"
								+ "⠘⠛⣿⣿⣿⣿⣿⡿⠦⠄⠀⠀⠀⠀⠀⢠⡴⣋⣠⣶⠶⢶⣟⠛⠉⣉⣽⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⠀⣤⡄⠀⢀⣴⣶⣶⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡹⣿⣿⣿\n"
								+ "⠁⠀⢸⡏⣸⣿⣾⣿⡄⠀⠀⠀⠀⠀⠀⣟⣿⣿⣿⣶⣿⣿⣷⣴⣾⣿⢟⣿⣿⣿⣿⣿⣿⣿⣿⢿⣿⣿⣿⣿⣿⣷⢬⣄⠀⠈⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣇⠸⣿⣿\n"
								+ "⠀⢠⣿⡇⢾⣿⣿⣿⡇⠀⠀⠀⠀⠀⣴⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⡿⣯⡙⣆⠀⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⢸⣿\n"
								+ "⠀⣼⣿⡆⢨⣿⣿⣿⣿⡆⠀⠀⠀⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣷⣿⣿⣦⣤⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡏⠉⠉⠁⠀⠀⠀\n"
								+ "⣿⣿⣿⠇⠀⣸⣿⣿⣏⣭⣻⣶⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣿⣿⣿⣿⣿⣿⣿⢟⠻⣿⣽⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣦⣤⡀⠀⠀⠀\n"
								+ "⣿⣿⠏⠀⢠⣿⣿⣿⣿⣿⣿⣿⢑⣵⣿⣿⣿⢋⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣾⣷⣖⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡛⠋⠁⠉⠁⠀⠀⠀⠀⢀⣀\n"
								+ "⠛⣰⣄⠀⣸⣿⣿⣿⣿⣿⣿⣧⣿⣯⣿⣿⢃⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠛⠿⣿⢿⣿⡄⠙⢿⣜⠉⠹⣏⣻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣦⠀⠀⠛⣛⣛⣛⣛⣿\n"
								+ "⣾⠋⠙⢠⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡘⠇⠀⠀⢿⣯⠙⣿⣦⠀⠙⠳⣄⡈⢿⡻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n"
								+ "⣻⡀⠀⣿⣿⣿⣿⣿⣿⣿⣭⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⢨⡿⣦⢦⠀⠈⢻⠳⣌⠻⣷⡀⠀⠈⠛⢶⣽⢦⢹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n"
								+ "⣿⣧⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⣈⣀⡈⠯⢃⠀⠈⠀⢸⠀⠀⢘⣤⣶⣾⣋⣉⡉⠸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n"
								+ "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⢿⣿⣿⣿⣿⣆⠀⠀⠀⣼⡿⢿⣿⡷⣦⡘⣷⣿⣿⡛⣿⣿⣿⣿⣌⣽⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n"
								+ "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠿⢀⣴⣿⢿⣿⣿⣿⣿⣧⣤⠰⣿⠡⣀⣛⡯⠟⠀⣼⣿⡟⢷⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n"
								+ "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣦⣨⣿⣿⣥⡤⠍⠁⠨⣿⣿⣇⠀⠈⢦⡀⠁⠀⣀⠴⠁⣿⢷⡄⠉⠙⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n"
								+ "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠉⠉⠙⣧⡀⠀⠀⠀⣠⠿⣿⣿⡄⠀⠀⠉⠉⠉⠁⠀⠀⣿⡀⠀⠰⢶⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n"
								+ "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣿⠿⣿⣿⠣⣄⠀⠀⠀⠉⠓⠋⠉⠁⣴⡿⣿⡅⠀⠀⣀⠀⠀⠀⠀⠀⣿⡇⠀⠀⠀⢀⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n"
								+ "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠟⣿⣿⣿⣿⣷⣯⣿⡄⠙⡄⠀⠀⠀⠀⠀⠀⠀⠿⠿⣿⣿⠷⠆⠁⠀⠀⠀⠀⢀⡇⠀⠀⠀⠀⠀⠙⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n"
								+ "⠀⠉⠻⠿⢿⣿⡿⠿⠛⠛⠉⠁⠀⠀⠀⠙⢿⣿⣿⣿⣿⣿⣷⠀⣿⣶⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⣠⡤⠴⠀⠀⣾⠃⠀⠀⠀⠀⣴⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n"
								+ "⠀⠀⢠⡴⠏⠁⠀⠀⠀⣀⡤⠤⠒⠂⠀⠀⠀⠈⢻⡿⠟⠻⠿⣷⣻⣿⣿⣧⣶⡄⠀⠀⠛⠛⠛⠉⠉⠉⠀⠀⠀⠀⡼⣿⠀⠀⠀⠀⠀⠈⣩⣍⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n"
								+ "⠀⠀⠀⠀⠀⣀⣴⠶⠿⠋⠉⠉⠉⠀⠀⠑⢦⣄⡀⢳⡄⠀⠠⣾⣿⣿⣿⣿⣿⣿⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠇⢻⣦⣄⠀⠀⠀⠀⠉⢻⡄⢹⣿⣏⣽⣿⣿⣿⣿⣿⣿⣿⣿\n"
								+ "⠀⠀⠀⢀⡾⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣉⣠⣷⢀⡄⣿⣟⣿⣿⣿⣿⣿⣿⣷⣤⡀⠀⠀⠀⠀⠀⣀⣠⠟⠀⢸⣿⣿⣟⡛⠲⣶⣴⣷⣿⣆⠹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n"
								+ "⣖⣦⣠⣾⣧⠀⠀⠀⢀⣀⣀⣤⣤⠶⣒⣛⣋⣉⣩⣤⣤⣴⡇⢸⣿⣿⡟⠁⠛⣯⠻⠮⠟⠻⠶⠶⠒⠛⠉⣼⠏⠀⢀⣾⣿⣿⣿⡇⢀⠁⠀⣅⠀⣹⣿⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿\n"
								+ "⣿⣿⣿⣿⣿⡷⠾⠿⠛⠛⠛⠛⠛⠛⠛⠋⠉⠁⢀⣼⣿⣿⡇⠀⠀⠙⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⣠⡾⠃⡀⠀⣼⣿⣿⣿⣿⣿⣿⠂⠀⠀⢠⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n"
								+ "⣿⣿⡿⠟⠛⠂⢒⣀⣀⣠⣤⣤⣤⣤⣤⣶⣶⣶⣿⣿⣿⣿⣷⡀⠀⠀⠀⠀⠙⢦⣀⠀⠀⠀⠀⣤⣾⡿⢁⣾⡿⣼⣿⣿⣿⣿⣿⣿⣿⠀⢀⢰⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n"
								+ "⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠿⠿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡀⠴⣴⣦⡀⠀⠈⠙⠶⣴⣶⣿⠟⢁⣼⣿⢱⣿⣿⣿⣿⣿⣿⣿⡇⡸⢡⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n"
								+ "⣟⣛⣿⣽⣿⣿⣿⣶⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⢸⣿⣿⣿⣶⣤⣤⣄⣸⠟⠁⣠⣞⣻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n"
								+ "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡀⠀⠙⢿⣿⣿⣿⣿⣧⣤⣾⣷⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n"
								+ "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⠀⠀⠀⠉⠻⣿⣿⣿⡻⢭⡏⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n"
								+ "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢨⡆⠀⠀⠀⣿⣿⣿⣿⣿⡇⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n"
								+ "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣏⢸⣿⠀⠀⠀⢹⣿⣿⣿⣿⣷⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n"
								+ "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⠀⢰⣿⣿⣿⡟⣽⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n"
								+ "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡀⠀⢸⣿⣿⣛⡾⣻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\n\"");
						Thread.sleep(200);
					} catch (InterruptedException e) {
						e.printStackTrace();
					}
				} else if (playMusic == 3) {
					mp3.play(comPath + "03_other.mp3");
				} else if (playMusic == 4) {
					System.out.println("     다음 문제로 넘어갑니다...     ");
					break;
				}
				if (answers(3, sc, cinemasList, mp3, comPath))
					break;
			}
			questions(4);
			while (true) {
				int playMusic = inputNum(sc);
				if (playMusic == 1) {
					mp3.play(cinemasList.get(3).getMovieSongFileName());
				} else if (playMusic == 2) {
					try {
						System.out.print("$$$$$$$$$$$$$$$$$$$$$$$**$$$$$ `$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$ \n"
								+ "$$$$$$$$$$$$$$$$$$$$$$$We:~`#Rk''$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$ \n"
								+ "$$$$$$$$$$$$$$$$$$$$$$*****i)!!<%'*$$$$$$$$$$$$$$$$$$*$$$$$$$$$$ \n"
								+ "$$$$$$$$$$$$$$$$*#)!-- -<:x!!Xt!:!:(#*$$$$$$$$$$$*\".uec(*$$$$$$$ \n"
								+ "$$$$$$$$$$$$$$6UWf. -~~!!!!Xt!!MMXX%!XX\"*$$$$$$*~.X$$TM*X.#$$$$$ \n"
								+ "$$$$$$$$$$$$$$$$`':d*.!!!Xt!!K9!!&MHt!?!X.\"$*\".x@@$TRE\"  `!.#$$$ \n"
								+ "$$$$$$$$$$$$$$$\\Ld* :!!!!??@t?!K9!X%~   `\\.:<tM@NR*E9`     ~:?$$ \n"
								+ "$$$$$$$$$$$$$$$$$\"> !!!%MXX?ME9!UR~       `!M!X*M@tTf         #$ \n"
								+ "$$$$$$$$$$$$$$$# ! '!!M!!?@Kt@TEM~  '    ~ '!!MXt%?K          `$ \n"
								+ "$$$$$$$*******F !!.!!!!!?Xt?T@@!! '         !!!??Kt!           $ \n"
								+ "$$$PXUX@WX:!<: !!!!!!!!!!%?XtT?Kf  ~ .umL '  !?!X?!>           $ \n"
								+ "!$Ft$$$9%RM!~ <!~``!!!!??!X!!KM!> '' @$#*\\   '!!!X!            $ \n"
								+ "X#:*\"#*E9!!!     : `<!!!!!!!X!!!!   '$ .     '!!~`            '$ \n"
								+ "M>K:r `\"!!!! '~     !<!!!!!!!!!!! ~ '%     :!'!!!>            9$ \n"
								+ "!\\@~    `!!! ':<@$%  !!!!!!!!!!!!    %   .dT !!!!!           :$$ \n"
								+ "!         ~`< ~!$    '~`!!!!!!! `> --->!!#\"!!~!!!<.          @$$ \n"
								+ "!.              #    :!!<!!!!!!! ':!!<!!~~. .!!>!!~.       u$$$$ \n"
								+ "!N             :.  .!!!!!!!!!!!! :`!!~`:<~~~` :!!:>~   .xd$$$$$$ \n"
								+ "U$L            `\"  !!!!!!!!!~~~! 9:  ~~  ::`~!!/:!! <9$$$$$$$$$$ \n"
								+ "$$$c          `:! /!!!!!!~`:!!!~:?!>. :  `~~`  \\`>` d$$$$$$$$$$$ \n"
								+ "$$$$k.         !~ ~~~~~`.:!!~`~x$I!=( : ::!.<!!!!! x$$$$$$$$$$$$ \n"
								+ "$$$$$$bu.     ` \\ ~!~!!!M!!~  z$$k4!``) ::.:!!!!!  #$$$$$$$$$$$$ \n"
								+ "$$$$$$$$$NWW@   ` tX. `~!?~ :@R$$!(C ().``~~~!!~ :! $$$$$$$$$$$$ \n"
								+ "$$$$$$$$$/dbW* .- M$$Ibcu x@$$$B$$$~d$$R !!!~  .'.!! #$$$$$$$$$$ \n"
								+ "$$$$$$$/W$$$$Wo#u. `#$$$R>'\"\"\"***\".z$$$$L~~  :!/ !!Xh #$$$$$$$$$ \n"
								+ "$$$$$$$$$$$$$$/@$$$Wc.\"\".sWNWWbeeW$$$$$$& <!!~!~'!X%?K:\"$$$$$$$$ \n"
								+ "$$$$$$$$$$$$Pd$$$$$$$$k N$$$$$$$$$$$$$$E? !<!!~.!!MXt*Mk'$$$$$$$ \n"
								+ "$$$$$$$$$$$$$$$$$$$$$$N $$$$$$$$$$$$$$$  '/!!` !?!t%7@$S!'$$$$$$ \n"
								+ "$$$$$$$$$$$$$$$$$$$$$$$.\"$$$$$$$$$$$$$~ :!!!~.!!X%M@NT*@9!`$$$$$ \n"
								+ "$$$$$$$$$$$$$$$$$$$$$$$$ `~$$T$$R6B$#  <!!!f !!%@UW*@69T!E!?$$$$ \n"
								+ "$$$$$$$$$$$$$$$$$$$$$$$*::..`  ``` .::!!!!! <!MXUN@$$*!Et!! $$$$ \n"
								+ "$$$$$$$$$$$$$$$$$$$$$$$ M!!!! !!!!!!!!!!!! <!!!%@UN$$@N?!!M R$$$ \n"
								+ "$$$$$$$$$$$$$$$$$$$$$$F'!!!!! !!~~~~.u+~.>:!!!t!N$$$W*TKt!!:?$$$ \n"
								+ "$$$$$$$$$$$$$$$$$$$$$$ !?!!!>' xWK:W$&d@$>~!!!!&9@$$$$B!!!!!'$$$ \n");
						Thread.sleep(200);
					} catch (InterruptedException e) {
						e.printStackTrace();
					}
				} else if (playMusic == 3) {
					mp3.play(comPath + "04_other.mp3");
				} else if (playMusic == 4) {
					System.out.println("     다음 문제로 넘어갑니다...     ");
					break;
				}
				if (answers(4, sc, cinemasList, mp3, comPath))
					break;
			}
			questions(5);
			while (true) {
				int playMusic = inputNum(sc);
				if (playMusic == 1) {
					mp3.play(cinemasList.get(4).getMovieSongFileName());
				} else if (playMusic == 2) {
					try {
						System.out.print("⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⠄⠀⠀⠈⠉⠉⠉⠉⠀⠀⠀⠠⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
								+ "⠀⠀⠀⠀⠀⠀⠀⡠⠊⣠⠖⠁⣠⡤⠖⠂⠀⠀⠀⠒⠦⢤⣀⠑⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
								+ "⠀⠀⠀⠀⠀⠀⡼⠀⢰⠃⠀⣾⡏⠀⢀⡠⠴⠒⠒⠦⣄⡀⠈⠓⠆⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
								+ "⠀⠀⠀⠀⢀⠌⠀⠀⠸⡀⠀⣿⠀⠠⠋⠀⠀⠀⠀⠀⠀⠉⠒⢄⠀⠀⠀⠠⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
								+ "⠀⠀⠀⢠⣾⣆⠀⠀⠀⠁⠀⠙⢀⠤⠶⠦⣄⠀⠀⠀⠀⠀⠀⠀⠈⠂⢄⣰⡄⠆⠐⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
								+ "⠀⠀⢀⣿⣿⣿⣿⣿⣦⣀⠀⢠⣧⠴⠂⠀⠘⣏⠙⠦⣍⠂⢄⣀⠀⠀⠀⠈⠁⠀⢂⡇⠀⠀⣀⣠⣴⣶⣿⣿⣿⣿⠻⣶⣄⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
								+ "⠀⠀⢸⣿⡿⣫⣷⠞⠀⠈⠁⠈⠁⠀⠀⠀⠀⠹⡄⠀⠈⠳⣦⣌⡉⠓⠶⠶⠶⠶⢻⣠⣴⣿⣿⡯⠋⠉⠙⢛⣿⣯⣤⣼⠟⠛⠋⠓⠂⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
								+ "⠀⠀⠀⠠⣿⣿⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠻⣿⣿⣍⠀⢀⣾⣿⣿⣿⣿⣾⣿⣦⣄⣈⠉⠻⠿⢿⣄⡀⠀⠀⠀⠀⢡⡀⠀⠀⠀⠀⠀⠀⠀⠀\n"
								+ "⠀⠀⠀⠀⢠⣿⣇⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⠤⠄⠀⠀⠀⠀⢩⠻⣿⣷⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⡿⠀⠀⠀⠀⠉⠻⢦⡀⠀⠀⠀⢳⠀⠀⠀⠀⠀⠀⠀⠀\n"
								+ "⠀⠀⠀⠀⢸⣿⡏⠀⠉⠛⠓⠀⠀⠀⠰⠚⠛⣩⠄⢀⣠⣤⡤⠀⠀⢸⠀⣿⣿⣿⣿⢋⣾⣿⣿⡿⠋⠁⠈⠀⠀⠀⠀⠀⠀⠀⠀⠑⢄⠱⣼⣦⣧⡀⠀⠀⠀⠀⠀⠀\n"
								+ "⠀⠀⠀⠀⠈⢿⣇⠺⠀⠀⠀⠀⠀⠀⠀⠀⠈⠠⠈⠉⠶⠒⠁⠀⠀⠀⡆⣿⣿⡿⢡⣿⠿⠋⠉⠉⠙⠂⠀⠀⠀⠐⠶⠒⠛⠉⠁⠀⠀⢷⡜⢿⣿⡇⠀⠀⠀⠀⠀⠀\n"
								+ "⠀⠀⠀⠀⠀⠀⠙⢿⣀⣈⣺⡦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⣿⣿⢁⣿⠃⣤⣶⣤⣀⠀⠀⠀⠀⠀⠀⢀⡤⠖⠶⠷⣦⠀⠘⣿⣾⣿⣿⠀⠀⠀⠀⠀⠀\n"
								+ "⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣶⣿⡇⣾⣿⠈⠏⠾⠯⠀⠡⠀⠀⠀⠀⠀⡻⢗⠀⠀⡀⠄⠀⠀⡗⠉⢻⣿⡄⠀⠀⠀⠀⠀\n"
								+ "⠀⠀⠀⠀⠀⠀⠀⠈⠀⠀⠀⠀⠀⠀⢀⡀⠀⠀⢀⠀⠀⠀⠀⠀⠀⣸⠉⣿⡇⡏⢹⠀⠈⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⠁⢸⢿⡇⠀⠀⠀⠀⠀\n"
								+ "⠀⠀⠀⠀⠀⠀⠀⠀⠐⠀⠀⠀⠀⣈⣀⠠⡄⠂⠀⠀⠀⠀⠀⠀⣼⡿⠀⠸⡇⣇⠘⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢾⢸⠇⠀⠀⠀⠀⠀\n"
								+ "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⠠⡀⠙⠓⠈⠀⠀⠀⠀⣠⡴⠂⠀⡟⠁⠀⠀⢳⢿⡄⠀⠀⠀⠀⠀⠀⠈⠓⠒⠂⠀⠀⠠⠄⠀⠀⠀⠀⣰⣤⠞⠈⢸⠀⠀⠀⠀⠀⠀\n"
								+ "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣠⣤⣶⡾⠋⠀⠀⠀⡇⠀⠀⠀⠀⢻⣿⣾⣆⠀⠀⠀⠰⢒⠒⢒⠲⠔⠈⠀⠀⠀⠀⠀⣰⣿⡿⠀⢀⡇⠀⠀⠀⠀⠀⠀\n"
								+ "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⠏⠀⠀⠀⠀⠀⣇⡀⠀⠈⢂⡀⢻⣿⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⡎⠀⢻⡇⠀⣼⠃⠀⠀⠀⠀⠀⠀\n"
								+ "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⠿⠃⠀⠀⠀⠀⠀⠀⡟⠉⠓⢤⡀⢱⣿⠙⠻⣿⣿⡷⣤⣀⡀⠀⠀⢀⣀⣤⣶⡟⠟⠓⠀⡈⢷⢠⠷⡀⠀⠀⠀⠀⠀⠀\n"
								+ "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡀⠀⠀⠁⠀⣾⡦⣄⢹⣿⣿⣾⣭⣍⣉⣛⠓⠢⢭⣹⢹⡗⣄⠀⠀⠸⠂⠀⢡⠀⠀⠀⠀⠀⠀\n"
								+ "⠀⠀⠀⠀⠀⠀⠀⢀⡠⠴⠶⢶⣾⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⠂⠀⠀⣀⣿⡇⠀⠀⠀⢹⣿⣿⣿⣿⣿⣿⣿⣿⣦⡙⡇⠈⣷⠶⠆⠀⢀⡆⠀⠀⠀⠀⠀⠀\n"
								+ "⠀⠀⠀⠀⠀⠀⡀⠁⠀⠀⠀⠘⠁⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⣿⣷⣤⣴⡿⠈⠛⠛⠛⠛⠛⠛⠛⠛⠛⠿⣮⡀⠻⣄⠀⢠⠛⠳⡀⠀⠀⠀⠀⠀\n"
								+ "⠀⠀⠀⠀⠀⣼⣇⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣤⣤⣶⣶⣶⣾⣿⡿⠋⠒⠒⢦⡀⠀⠀⠀⠀⠀⠀⠈⠷⢱⣶⣶⡟⠳⣾⠀⢰⠁⠀⠀⠀⠀⠀\n"
								+ "⠀⠀⠀⠀⢀⣿⣿⣶⣶⣶⡶⠶⠶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠃⠀⠀⠀⠀⠀⢱⠀⠀⠀⠀⠀⠀⠀⠀⠙⢻⣿⣿⡄⠀⠻⠛⢆⠀⠀⠀⠀⠀\n"
								+ "⠀⠀⢀⠄⠉⠀⠹⠛⠉⠀⠀⠀⠀⠀⠉⠛⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠋⣿⣿⠢⢴⠀⢸⠀⠀⠀⠀⠀\n"
								+ "⢀⠔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠙⠿⣿⣿⣿⣿⣿⣿⣿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠈⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣝⣿⡡⣀⠀⣸⢷⠀⠀⠀⠀\n"
								+ "⡌⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣿⣿⡟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⢼⣿⡹⠳⡇⠀⡀⠀⠀⠀\n"
								+ "⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⡋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡏⣿⣷⢠⡀⢰⢱⠀⠀⠀\n"
								+ "⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⣶⣿⣿⠎⡟⢦⠈⡄⠀\n");
						Thread.sleep(200);
					} catch (InterruptedException e) {
						e.printStackTrace();
					}
				} else if (playMusic == 3) {
					mp3.play(comPath + "05_other.mp3");
				} else if (playMusic == 4) {
					System.out.println("     다음 문제로 넘어갑니다...     ");
					break;
				}
				if (answers(5, sc, cinemasList, mp3, comPath))
					break;
			}
			questions(6);
			while (true) {
				int playMusic = inputNum(sc);
				if (playMusic == 1) {
					mp3.play(cinemasList.get(5).getMovieSongFileName());
				} else if (playMusic == 2) {
					try {
						System.out.print("⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣤⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣦⣙⠿⠿⠿⢟⣫⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⢹⣿⣿⣿⣿⣿⣿⣿⣿⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
								+ "⠀⠀⠀⠀⠀⠀⢀⣤⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⢸⣿⣿⣿⡏⠉⠙⢿⣿⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀\n"
								+ "⠀⠀⠀⠀⢀⣴⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⣿⡿⡍⠳⣄⡀⢀⣿⣿⣿⣿⣆⠀⠀⠀⠀⠀⠀\n"
								+ "⠀⠀⠀⢀⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⢿⣿⢿⡄⠸⡿⢄⠛⣘⢠⣼⣿⣿⣿⣿⣿⣧⡀⠀⠀⠀⠀\n"
								+ "⠀⠀⠀⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⡞⣼⡻⡄⠳⡤⠽⠾⠿⠿⠿⢛⣻⣿⣿⣿⣷⡀⠀⠀⠀\n"
								+ "⠀⠀⠀⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣾⣿⣿⣄⠙⢶⣶⣶⣶⣿⣿⣿⣿⣿⣿⣿⣧⠀⠀⠀\n"
								+ "⠀⠀⠀⠀⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠟⠛⠉⢉⣁⣀⣀⣀⣀⣀⣉⡉⠙⠛⠻⢿⣿⣿⣿⣿⣿⣯⣻⣍⡲⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⠀⠀\n"
								+ "⠀⢀⡀⣶⣤⣌⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠋⣁⣤⣶⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣶⣤⣈⠛⢿⣿⣿⣿⣿⣿⣷⣾⣿⣿⣿⣿⣿⡿⠟⠛⠛⠁⠀⠀\n"
								+ "⣰⣿⣿⣿⣿⣿⣿⣿⣝⢿⣿⣿⣿⣿⣿⣿⣟⣡⣶⠿⢛⣛⣉⣭⣭⣤⣤⡴⠶⠶⠶⠶⢲⣴⣤⠭⠭⡭⣟⠻⠦⣝⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⢉⣀⣠⣶⣿⣆⠀⠀\n"
								+ "⠹⣿⣿⣿⣿⣿⣿⣙⠻⣿⣮⣛⠿⣿⣿⣿⣫⣵⡶⠟⣛⣋⣭⣭⣶⣶⣶⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣾⣮⣽⣿⣿⣿⠿⠟⠛⠉⢀⣴⣿⣿⣿⣿⣿⣿⣶⡀\n"
								+ "⠀⠈⠙⠋⠁⠀⠈⠉⠛⠳⣭⣛⢷⣦⣸⣿⣯⣶⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡏⣿⠀⠀⠀⣀⣴⣾⣿⣿⣿⣿⡟⣿⣿⣿⣿⡇\n"
								+ "⠀⠀⠀⠀⠀⠀⢀⣠⣾⣿⣿⠿⠿⢿⣹⣿⣧⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢸⡏⣀⣴⣾⣿⣿⠿⠛⠉⠀⠀⠀⠈⠛⠛⠉⠀\n"
								+ "⠀⠀⠀⠀⢀⣴⠿⠛⠋⠁⠀⠀⠀⢀⣯⢿⣿⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⣿⠣⣟⡻⠟⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
								+ "⠀⠀⠀⠀⠉⠀⠀⠀⠀⠀⢀⣀⣴⣾⣿⠈⡿⣿⠃⠀⠀⠀⠈⠉⠛⠻⠿⣿⣿⣿⣿⣿⠿⠛⠉⠉⠀⠈⠉⠛⣿⣽⡟⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
								+ "⠀⠀⠀⠀⠀⢀⣠⣤⣶⣾⣿⣿⣿⣿⣿⣀⣼⣿⠁⠀⠀⠀⠀⠀⠀⠀⠀⣹⡟⣻⣿⡃⠀⠀⠀⠀⠀⠀⠀⠀⢹⣷⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
								+ "⠀⠀⢀⣴⣾⣿⣿⣿⣿⣿⣿⣿⣿⡿⢹⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⣰⣿⢣⡇⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
								+ "⠀⠀⠟⠋⠙⠛⠻⣿⣿⣿⣿⣿⠏⠀⠈⢿⣿⣿⣿⣦⣄⣀⣀⣀⣠⣴⣿⣏⡞⢻⣸⣿⣷⣄⠀⠀⣀⣤⠴⣾⣿⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
								+ "⠀⠀⠀⠀⠀⠀⠀⠀⠹⣿⣿⠃⠀⠀⠀⠈⢿⣿⣵⣾⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠹⣿⣿⣿⣿⣿⣿⣿⣿⣶⠾⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
								+ "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣏⠀⠀⠀⠀⠀⣀⣼⣿⡛⢿⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⣿⣿⣿⣿⣿⣿⠟⣡⣾⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
								+ "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⠀⠀⢠⣶⣿⣿⣯⣿⡇⠀⢹⣿⣿⣿⣿⣷⣤⣤⣦⣶⣿⣿⣿⣿⣿⡇⠀⣿⣿⢸⣿⣶⣤⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
								+ "⠀⠀⠀⠀⠀⠀⠀⠀⢀⣄⣠⣴⣾⣿⣟⣿⠟⠁⣿⡇⠀⣿⡿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡏⡇⢀⣿⣿⠙⢮⣛⠿⣷⣦⣄⣀⣀⣀⣠⣀⠀⠀⠀⠀⠀⠀⠀⠀\n"
								+ "⠀⠀⠀⠀⣴⣶⣶⣾⣿⣿⡿⣛⣽⠞⠋⠀⠀⠀⣿⣷⠀⣍⠇⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠉⡄⣸⣿⡿⠀⠀⠈⠙⠮⣟⠿⣿⣿⣿⣿⣿⣿⡆⠀⠀⠀⠀⠀⠀\n"
								+ "⠀⠀⠀⠀⢀⣹⣿⣿⣿⢵⡿⠋⠀⠀⠀⠀⠀⠀⢿⣿⣦⣿⡷⣄⠙⠿⣿⢹⣿⣿⢼⡿⠋⣡⣶⣳⣿⣿⣿⠃⠀⠀⠀⠀⠀⠈⠿⠬⣿⣿⣿⣿⣿⣷⠀⠀⠀⠀⠀⠀\n"
								+ "⠀⠀⠀⠀⠸⣿⣿⣿⣿⠟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⣿⣿⣷⣻⢿⣶⣬⣈⣉⣉⣤⣴⣿⣻⣾⣿⣿⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⣿⣿⡿⠇⠀⠀⠀⠀⠀⠀⠀\n"
								+ "⠀⠀⠀⠀⠀⠀⠙⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣿⣿⣿⣿⡇⣿⣇⣿⢹⣿⣿⣿⣿⡟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
								+ "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
								+ "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢿⣿⣿⣿⣿⡿⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n\"");
						Thread.sleep(200);
					} catch (InterruptedException e) {
						e.printStackTrace();
					}
				} else if (playMusic == 3) {
					mp3.play(comPath + "06_other.mp3");
				} else if (playMusic == 4) {
					System.out.println("     다음 문제로 넘어갑니다...     ");
					break;
				}
				if (answers(6, sc, cinemasList, mp3, comPath))
					break;
			}
			questions(7);
			while (true) {
				int playMusic = inputNum(sc);
				if (playMusic == 1) {
					mp3.play(cinemasList.get(6).getMovieSongFileName());
				} else if (playMusic == 2) {
					try {
						System.out.print(
								"+++#%@@@%@@%*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n"
										+ "+++++*#@@@@@@#++++***###*****+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n"
										+ "+++++++*%@@@@@%##%%%%%%%%%%%%##*+++++++++++++++*+++*####****++++++++++++++++++++++++++++++\n"
										+ "+++++++++#@@%%@%%%@@%%%%%%%%%%%%#++++++++++++*#%%%%%%@%%%%%%%#++++++++++++++++++++++++++++\n"
										+ "+++++++++++*%@@@@@%%@@@@@@%%%%%%%+==+===++++#%@@@@@@@@@@@@%%%%#+++++++++++++++++++++++++++\n"
										+ "+========++*@@%%%%@@@@@@@%%%#**++++=====++#%@@@@@@@@@@%%##**+++++++++++++++=+=============\n"
										+ "==========*%@@@@@@@@@@@@@%#***++=+++===++*%@@@@@@@@@@@%#**+===============================\n"
										+ "==========*@@@@@@@@@@@@@@%###***++++++++*#@@@@@@@@@@@%%#**++==============================\n"
										+ "=========+*@@@@@@@@@@@@@@%%###***#******%@@@@@@@@@@@%########+*+==========================\n"
										+ "==========*%@@@@@@@@@@@@%%%%%%%#*##*+++*#@@@@@%%@@@%###*##*##+#+--------------------------\n"
										+ "============%@@@@@%%@%%%%%%%##**+*###++*%@@@@@%%%%%%####*+=*#*+=--------------------------\n"
										+ "============+#%@@%%%%%%%%%%%%##***##*+#%@@@@@@@@%%%##%%##*####*==============-------------\n"
										+ "%*=============+*%@%%%%%%%%%%%###*##++%@@@@@@@@@%%%##%%#*#@%#*========--------------------\n"
										+ "+#%#+=++++==++*%@@@%%%%%%%%%%%%%##**#%@@@@@@@@@%%%%%####*####+++++++++++++++====+=++++++++\n"
										+ "+*#%#+++++++#%@@@@@%%%%%%%%%@@@@%%%%@@@@@@@%%%@%%%%%%####**+++++++++++++++++++++++++++++++\n"
										+ "%@@@%#+++**###%@@@@@@%%@@@@@@@@@@@@@@@@@@%%%%%%%%%%%%%%###*+++++++++++++++++++++++++++++++\n"
										+ "###%%%+++**+=++++*#%%##+++*#@@@@@@@@@@@@@@##%%%%%%%%#*+*@%%%##***+++++++++++++++++++++++++\n"
										+ "**+****=***+=++*+=+++=+*#@@@@@@@@@@@@@@@@@#*#%%%%*++++++#@%@@@@@%*++++++++++++++++++++++++\n"
										+ "+*+**#**++*++++=++=++%@@@@@@@@@@@@@@@@@@@@###%%%%#====+++#@@%@@%%@%%#*++++++++++++++++++++\n"
										+ "+++#**+++++*+++=+++*@@@@@@@@@@@@@@@@@@@@@@##%%%###*===+===*@@@@@@@@@@@%==**+++++++++++++++\n"
										+ "*+*%#***+++**+==++*@@@@@@@@@@@@@@@@@@@@@@@%%@@@@@@@+=======+*%@@@@@@@@%++++++++#%#++++++++\n"
										+ "**#%#********++++*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#==========*%@@@@@@%+++++**+###+==+++++\n"
										+ "%%%#########****%@%@@%%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@+-----=---=#@@@@@%*+*++++*@#%%******#%\n"
										+ "%##%%#%%%%%***%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#----------+%@%%%###**###@@@%#********\n"
										+ "%@@@%@@%%#**#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%==--------=%%%%%###%%@@@@@%**********\n"
										+ "%%%%%%####%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@===-------*%####%#%%%%@@@#***********\n"
										+ "%%#####%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@+========+@#***********%%************\n"
										+ "#%##%%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@========*@#**************************\n"
										+ "#%%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%%%@%=-=---=#@%***************************\n"
										+ "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#%@@@@%@@#+====+#@#****************************\n"
										+ "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%#%@@@%%%%%##%%%%@#*****************************\n"
										+ "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%%%@@@@@%%###%%%@@@%******************************\n"
										+ "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%%%###%###****#%%%%@%#*****************************\n"
										+ "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#%%%%%####********#%@@%%@%****************************\n"
										+ "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@+######%%%#**######%@@%#%@%#**************************\n"
										+ "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%*###%%%%%%#*******#@@@@###@@%#************************\n"
										+ "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%*%%%%%%%%%#*##%%%@@@@@@@@##%@@#***********************\n"
										+ "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%%@@@@@@@@@@@%%%#%@@@@@@@%***#@@%#*********************\n"
										+ "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*****%@@#********************\n");
						Thread.sleep(200);
					} catch (InterruptedException e) {
						e.printStackTrace();
					}
				} else if (playMusic == 3) {
					mp3.play(comPath + "07_other.mp3");
				} else if (playMusic == 4) {
					System.out.println("     다음 문제로 넘어갑니다...     ");
					break;
				}
				if (answers(7, sc, cinemasList, mp3, comPath))
					break;
			}
			questions(8);
			while (true) {
				int playMusic = inputNum(sc);
				if (playMusic == 1) {
					mp3.play(cinemasList.get(7).getMovieSongFileName());
				} else if (playMusic == 2) {
					try {
						System.out.print("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
								+ "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠲⣄⢀⡀⠀⠀⠀⠀⠀⠀⢀⠄⠀⣸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
								+ "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡄⠈⠳⣕⢄⠀⠀⠀⠀⢠⣏⠀⠀⣹⡆⠀⠀⠀⠀⠀⠀⣀⡀⣀⠀⠀⠀⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
								+ "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⢸⡿⡷⣄⣤⣾⣿⣯⣿⣿⣿⣧⡀⠀⠀⢀⠀⠀⠈⣻⣿⣻⢿⣶⢿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
								+ "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣽⠀⡖⣯⢳⣿⣿⣿⡟⠛⡞⣿⣽⣿⣿⣧⣼⠃⢸⣧⣷⣿⡟⣷⣯⡟⣾⢻⡞⣿⡆⠀⠀⠀⠀⢠⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
								+ "⠀⠀⠀⠀⠀⠠⠤⣀⡀⠀⠀⠀⠀⣀⣼⣧⠽⠒⠋⠉⠉⠉⠉⠉⠙⠓⠿⠿⠛⠋⠉⣄⠀⢻⣿⣿⡿⣽⣳⢯⡿⣽⢯⡿⣽⣷⠀⠀⠀⠀⢸⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
								+ "⠀⠀⠀⠀⠀⠱⡀⠀⠈⠉⢓⢾⣿⡿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣿⡄⠀⠐⢹⣿⡷⣯⢿⡽⣯⢿⡽⣷⣿⠀⢀⣤⣷⣼⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
								+ "⠀⠀⠀⠀⠀⠀⠘⢦⠀⣠⢯⡿⠋⠀⠀⠀⠀⢀⣀⠀⠀⢀⣠⣆⣴⡄⣀⠀⢄⠂⠄⡷⠻⣦⣤⣾⣿⣽⣯⡿⣽⢿⣾⡉⢏⡿⣿⣿⣻⣿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
								+ "⠀⠀⠀⠀⠀⠀⠀⠀⢿⣵⠟⠀⢀⡠⠔⠚⠉⣡⡈⠉⠉⠛⠻⣿⣿⣿⣷⣮⣦⣴⣾⣷⣿⠿⠿⠾⣌⣛⡟⠉⣻⣯⣿⣧⠨⣽⣿⣞⣿⠟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
								+ "⠀⠀⠀⠀⠀⠀⠀⠀⣼⠏⠀⡔⠁⠀⠀⠀⣀⢴⣹⠶⢳⣀⠀⢻⣿⣛⡹⠿⠿⣿⣭⠝⠀⠀⠀⠀⠈⠹⣷⣤⣿⣈⣽⣻⠵⠿⠿⣭⣿⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
								+ "⠀⠀⠀⠀⠀⠀⣠⣼⡟⠀⣸⠀⠀⠀⠀⣦⣾⣿⣿⣿⣿⡿⠟⠚⠋⢄⡀⠀⢰⠋⢳⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠈⠀⠀⠐⠋⣟⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
								+ "⢄⡀⠀⠀⠀⠈⡷⡿⠀⠀⡇⠀⠀⢠⣮⣁⣽⣿⣿⠟⠋⠁⠀⠀⢀⠞⠻⣦⢾⣦⡾⠁⠀⢠⢶⣷⡀⠀⠀⠀⠀⠀⠈⣇⠀⠀⠀⣠⡾⣼⡟⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
								+ "⠀⠉⠲⢤⣠⡴⣹⠃⠀⠀⣧⠀⢠⣾⣿⣿⣿⠏⠀⠀⠀⠱⣽⠞⢻⠦⡤⢿⣌⢿⣿⣤⠀⠈⣿⠿⣷⡄⣀⠀⠀⠀⣠⠹⣄⣠⠾⢋⡴⢇⢣⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
								+ "⠀⠀⠀⠀⠘⢷⡟⠀⠀⠀⣿⢤⠘⣿⣿⣿⡏⠀⢠⡀⠀⠀⣸⣷⢪⠝⣰⢃⡞⢮⣿⣿⡄⠀⢹⣶⣿⣿⣶⡴⢶⣿⣲⣯⣿⣿⡏⡙⣬⠼⠋⠀⠀⠀⠀⠀⠀⣠⡄⠀⠀⠀⠀⠀\n"
								+ "⠀⠀⠀⠀⠀⢸⠁⠀⠀⣸⠇⢸⣿⠏⣿⣿⡁⠀⠀⢿⣆⡾⠀⣿⣇⠹⣆⢏⡸⢆⡈⣹⣷⡀⢸⠏⢸⣿⣿⣷⣿⣿⣿⣿⣿⣾⣇⣾⢀⣶⣆⣀⣀⣀⣰⠶⡿⢱⠎⣀⠀⠀⠀⠀\n"
								+ "⠀⠀⠀⠀⠀⠸⠀⠀⢀⡏⢀⣿⣽⠲⢾⣿⡇⠀⠠⢜⢢⠟⣦⡼⢧⢋⡖⢎⡱⠮⢵⡏⡹⡇⠀⠑⣿⡿⠛⣿⣿⣿⣿⡿⣭⣟⣹⣿⣿⣾⣿⡟⢏⡱⢌⢣⡱⢣⣫⢖⢧⣋⠖⠄\n"
								+ "⠀⠀⠀⠀⢠⠀⠀⠀⡘⠁⣼⡿⠁⠀⠀⠉⠛⠦⣵⣎⣦⠕⢊⣀⣊⣜⠸⣏⡛⡛⠞⡹⠳⣷⠀⠀⠀⠁⠀⠋⠉⠉⠉⠀⠻⣧⣿⣿⣿⣿⢣⡙⣌⠲⣩⢲⡱⣣⠏⣎⣓⡬⠆⠀\n"
								+ "⠀⠀⠀⠀⠎⠀⠀⠠⠁⢠⡿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⡴⢢⡔⡿⠀⠑⠨⠙⠶⣥⣆⣑⠌⢣⡀⠀⠀⠀⢀⠀⣀⠂⣄⡾⢩⣿⣹⣻⣿⠋⠛⠛⠶⣇⢇⡚⡥⢞⡭⣚⠼⣱⡀\n"
								+ "⠀⠀⠀⠀⣽⠀⠀⠄⢐⡾⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⣌⠳⣼⡅⠈⡲⢦⣉⠒⡰⢈⠉⡉⢉⣽⡷⣶⣟⡛⠻⢤⡃⠊⡤⣞⣿⣿⣿⣿⣆⠀⠀⣠⠞⢾⡴⡙⡮⠆⠉⢚⠀⠃\n"
								+ "⠀⠀⠀⠀⣯⠽⠖⠖⢻⡁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⢌⠻⣜⢛⢦⡁⢆⡉⡙⠁⠂⠀⣴⡞⢯⡜⢧⡹⣛⣦⡀⠉⠓⠛⠶⠾⣿⣿⣿⣿⣷⣦⣽⣦⣤⠷⠋⠁⠀⠀⠀⠀⠀\n"
								+ "⢀⣠⠴⠚⠁⢠⠠⡀⠼⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠐⢌⢣⡝⡌⠦⡉⢆⡐⠄⠁⣴⣞⠳⣜⢣⠞⣥⠳⣍⠞⣵⡀⠀⠀⠀⠀⠀⠉⠙⠛⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
								+ "⠘⠻⢦⣱⣌⢢⡑⣌⠲⡿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠌⡜⡲⠜⢨⠓⠈⢄⣠⣴⢛⢧⠪⡝⣌⢧⣋⠶⡹⢌⡻⢼⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
								+ "⠀⠀⠀⠀⠈⠉⠉⠉⢉⡇⠀⠀⠀⠀⠀⠀⠀⠀⡀⢢⠑⡬⢱⢩⠟⠙⠛⠛⠒⣳⢏⠶⣙⠼⣘⠦⣍⢮⡱⣍⣾⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
								+ "⠀⠀⠀⠀⠀⠀⠀⠀⡎⠀⠀⠀⠀⠀⠀⠀⠄⢢⢅⢣⠚⡔⢣⠏⠀⠀⠀⠀⠀⣟⢎⡳⣉⠮⢥⢫⠴⣢⢓⢾⣁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
								+ "⠀⠀⠀⠀⠀⠀⠀⡸⠀⠀⠀⠀⠀⠀⢀⠇⡸⢃⠼⡘⠟⣸⠟⠀⠀⠀⠀⠀⢸⣛⡜⢣⡛⡼⣃⢟⡼⣣⢟⡻⢼⢧⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
								+ "⠀⠀⠀⠀⠀⠀⢰⠃⠀⠀⠀⠀⠠⠨⣐⢪⢑⡋⣎⣱⠽⠃⠀⠀⠀⠀⠀⠀⣿⢄⡏⢧⡙⢶⠩⡞⢴⢣⠎⣽⡷⣿⣻⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
								+ "⠀⠀⠀⠀⠀⠀⣾⠀⠀⠀⠀⠀⠀⠀⠀⠈⠈⣏⠉⣻⣆⠀⠀⠀⠀⠀⠀⠀⠈⠚⠾⠧⠾⠥⠿⠼⠾⠾⠽⠾⠓⠓⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
								+ "⠀⠀⠀⠀⠀⠀⠘⠦⣀⠀⢀⡤⠒⢦⣠⠖⠚⣟⡎⠙⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
								+ "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠑⠒⠤⠞⠻⠦⢄⡟⠋⠒⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n");
						Thread.sleep(200);
					} catch (InterruptedException e) {
						e.printStackTrace();
					}
				} else if (playMusic == 3) {
					mp3.play(comPath + "08_other.mp3");
				} else if (playMusic == 4) {
					System.out.println("     다음 문제로 넘어갑니다...     ");
					break;
				}
				if (answers(8, sc, cinemasList, mp3, comPath))
					break;
			}
			questions(9);
			while (true) {
				int playMusic = inputNum(sc);
				if (playMusic == 1) {
					mp3.play(cinemasList.get(8).getMovieSongFileName());
				} else if (playMusic == 2) {
					try {
						System.out.print("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⡠⠤⠤⠒⠢⣤⠤⢤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
								+ "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠴⠋⠁⠀⠀⠀⠀⢸⢿⢦⡠⠶⠷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
								+ "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡴⠁⠀⠀⠀⣀⠤⠒⠊⠉⢪⡙⠦⣄⣀⡼⡷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
								+ "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡞⠀⠀⠀⡤⠊⠁⣀⡠⠤⠒⠚⠉⠓⠲⠶⠺⠭⠾⠧⠤⢄⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
								+ "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⠀⠀⣠⠊⣀⠴⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⢠⠀⠀⠀⠀⠀⠀⠉⠲⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
								+ "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡏⠀⢰⢣⠞⢁⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⡏⠀⠀⠀⠀⠀⠀⠀⠀⠈⢧⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
								+ "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⡠⠷⠓⠊⠉⠀⠀⠀⠀⠀⠀⠀⢀⣠⠞⠁⠉⢳⣦⣤⣬⡤⠤⢄⡀⠀⡼⠃⠀⠀⠀⠀⠀⠀⠀⠀\n"
								+ "⠀⠀⠀⠀⠀⠀⠀⢀⣠⠞⠉⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⡤⠾⠾⣿⠆⠀⠀⢀⣿⣷⣦⣾⠃⠀⠀⠓⢠⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
								+ "⠀⠀⠀⠀⠀⢀⡴⠋⠀⠀⠀⠀⠀⠀⠀⢀⡠⠒⡟⢻⣾⣉⣓⣦⠀⠀⠀⠀⢸⣿⣿⣿⡟⠁⠀⠀⢀⡞⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
								+ "⠀⠀⠀⠀⢀⡞⠀⠀⠀⠀⠀⠀⠀⠠⠖⠁⠀⡰⢧⠀⠣⣸⣿⣿⣧⡀⠀⠀⠸⡽⠟⠋⣏⢢⡀⡠⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
								+ "⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠞⠀⠈⣣⡀⠀⠉⠉⠀⠀⠀⠀⠀⡇⣰⠟⠉⢳⣯⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
								+ "⠀⠀⠀⠀⠈⣇⠀⠀⠀⠀⠀⠀⠀⣠⡞⠁⠀⢀⣠⢯⢳⠀⠀⠀⢀⠀⠀⣑⣾⣣⡿⣶⡐⠋⠛⡷⠛⠳⠶⣠⣀⠀⠀⠀⠀⠀⠀⠀\n"
								+ "⠀⠀⠀⠀⠀⠹⡀⠀⠀⠀⠀⠀⠀⠏⠣⢤⣐⣛⣒⣺⣾⡀⠀⠈⠙⢿⣟⣛⣿⣯⡽⠌⢁⠆⠈⠀⠤⣈⠙⢛⣳⣟⣒⣿⡞⠛⡆⠀\n"
								+ "⠀⠀⠀⠀⠀⠀⠹⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⣶⡏⠀⠀⠉⠲⣄⡀⠀⠉⠒⣻⠋⢻⣄⠹⠀⠀⠀⠀⢸⠉⠉⠁⠘⡿⢿⠎⠁⢰⠀\n"
								+ "⠀⠀⠀⠀⠀⠀⠀⠨⡷⣄⠀⠀⠀⠀⠀⣀⠼⣇⠱⣄⠀⠀⠀⠀⢨⡟⠒⠒⠋⠀⠀⢉⣷⣤⣾⣷⡴⣋⣿⠯⡳⠤⠇⠀⠀⠀⠈⡇\n"
								+ "⠀⠀⠀⠀⠀⠀⣠⠴⠣⡈⠓⠤⡠⠔⠊⠁⠀⠘⢄⠈⠲⣄⠀⢀⡞⡧⢄⡀⠀⠀⠀⡼⠻⣷⣜⣿⣿⣿⡹⡄⠘⢦⠀⠀⠀⠀⠀⢡\n"
								+ "⠀⠀⠀⠀⢀⡞⠀⠀⠀⠈⢱⠞⠀⠀⠀⠀⠀⠀⠀⠑⢄⡠⣙⣚⣇⡇⠀⠈⠳⡀⠀⡇⠀⠉⠙⠽⢿⡷⢽⡇⠀⠀⠱⡆⠈⠀⠀⡞\n"
								+ "⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠚⠭⠭⠃⠀⠀⠀⠘⡄⡇⠀⠀⠀⣤⣄⡇⠀⠀⠀⠀⢸⠃⠀⠀⢰⠁\n"
								+ "⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⢹⠀⠀⠀⠀⠀⠀⠀⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⡴⠛⡇⠀⠀⠀⣿⠴⠃⠀⠀⠀⡴⠃⠀⠀⠀⡎⠀\n"
								+ "⠀⠀⠀⠀⠈⢯⠀⠀⠀⠀⠈⣧⠀⠀⠀⠀⠀⠀⢸⡀⠀⣀⣀⣀⡀⢀⠀⣀⠼⢦⡀⡇⠀⠀⢰⠇⠀⠀⢀⡴⠋⠀⠀⠀⠀⡼⠀⠀\n"
								+ "⠀⠀⠀⠀⠀⠀⠳⣄⠀⠀⠀⠈⣆⡠⠤⠤⠤⠤⢄⣷⠋⠀⠀⠀⠉⠺⡶⠁⠀⠀⡽⠁⠀⢴⡁⠀⣠⠞⠁⠀⠀⠀⠀⠀⡼⠁⠀⠀\n"
								+ "⠀⠀⠀⠀⠀⠀⠀⣸⠳⢤⣀⣰⡇⠀⠀⠀⠀⠀⠀⠈⠑⠦⠀⠀⠀⠀⠀⠀⢠⠞⠁⠀⠀⡏⢱⠞⠁⠀⠀⠀⠀⠀⢀⡜⠁⠀⠀⠀\n"
								+ "⠀⠀⠀⠀⢀⡰⠞⠉⠧⣀⠀⠈⠙⡦⠀⠀⠀⠀⣀⡠⠤⢤⠀⠀⠀⠀⠀⡴⠃⠀⠀⠀⣸⠀⠁⠀⠀⠀⠀⠀⠀⢠⠟⠀⠀⠀⠀⠀\n"
								+ "⠀⠀⠀⡰⠋⠀⠀⠀⠀⠀⠉⠉⠉⣇⢀⣤⠒⠉⠀⠀⠀⠀⢣⠀⠀⢠⠎⠀⠀⠀⠀⢀⡏⠀⠀⠀⠀⠀⠀⢀⡴⠋⠀⠀⠀⠀⠀⠀\n"
								+ "⠀⢀⡞⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠚⢧⠀⠀⠀⠀⠀⠀⢣⣠⠋⠀⠀⠀⠀⠀⡸⠢⣀⠀⠀⠀⢀⡰⠊⠀⠀⠀⠀⠀⠀⠀⠀\n"
								+ "⠀⡼⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣧⠀⠀⠀⠀⠀⡼⠃⠀⠀⠀⠀⠀⢠⠇⠀⠈⠙⠲⠖⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
								+ "⢰⠃⠀⠀⠀⠀⠀⠀⠀⠀⠈⠳⢤⣀⣀⣀⣰⣃⣳⣄⣀⣀⣈⠁⠀⠀⠀⠀⠀⢠⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n"
								+ "⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠑⠒⠦⢤⣠⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n");
						Thread.sleep(200);
					} catch (InterruptedException e) {
						e.printStackTrace();
					}
				} else if (playMusic == 3) {
					mp3.play(comPath + "09_other.mp3");
				} else if (playMusic == 4) {
					System.out.println("     다음 문제로 넘어갑니다...     ");
					break;
				}
				if (answers(9, sc, cinemasList, mp3, comPath))
					break;
			}
			questions(10);
			while (true) {
				int playMusic = inputNum(sc);
				if (playMusic == 1) {
					mp3.play(cinemasList.get(9).getMovieSongFileName());
				} else if (playMusic == 2) {
					try {
						System.out.print("\n" + "..............................:?5GG#&B5J7!:.......\n"
								+ "...........................:75B&@&#BBB#&&&#P7.....\n"
								+ "..........................:P@&&#?^:::::^7YG#Y?:...\n"
								+ ".........................~B&&&#~ ..........:.^J:..\n"
								+ ".........................5@&&&&~..............!7..\n"
								+ "........................:B&&&#!....:!JJ?~....:!J..\n"
								+ ".......................:7G&&&P~~~~!G&@@&&5^^?#&&G7\n"
								+ "........:^!?JJYJJ?7!~^.J!.~B@P~~~~J@&&&&@#^^G@&&@&\n"
								+ "...:~7YPB&&&&&&&&&&&&#GG~..^BJ.. ..?G##BP~..~G&&#?\n"
								+ ".75B&&&&&&&&&&&&&&&&&&&&B^. Y@BP?:...:^:. ....?J:.\n"
								+ "J&&&&&&&&&&&&&&&&&&&&&&&&#JJ#&&&@J ....:!?!!^.7^..\n"
								+ "&&&B##&&&&&&&&&&&&&&&&&&&&B!G@&&&#Y!^755J!7?P7!...\n"
								+ "5P5^^^Y&&&&&&&&&&&&&&&&&&&&P^Y#@&&&&#@5 ... PP....\n"
								+ " Y7^7~^5&&&&&&&&&&&&&&&&&&&&? ^YB&&&&&B!^:^7&?....\n"
								+ ".7&~...^#&&&&&&&&&&&&&&&&&&&P...:75B&&@&###&G:....\n"
								+ ".~?..::.Y&&&&&&&##&##&&&&&&&B~.^^..:!7?YPJ?7:.....\n"
								+ ":?~:.^~^~#&###&##&#&#####&&#5YJ7~:!7J7^J:^~^:.....\n"
								+ "..^7.:^^!&&##&&&&&&&&&&##GY~^~!?J?!~7~7?~!!!~~~^..\n"
								+ "...7!...?G&&&&#BBGPGGY?~^..^^..:J^..??7~:...::^~7~\n"
								+ "...:?^~!!!?!~^^^~7YGB~!?:..77!.?~...7J..:~!!~~^^^:\n"
								+ "....:~~^^:^JJ5G#&&@#P!:~J.^7.!7?....7:.!J^........\n"
								+ "......:^~?7^PBPYJJ7^....?.7^..J!..:!7~~77~~~^.....\n"
								+ "..~JJ?7!~J~ :7 :!:...:^!?~J^..~~^J?~::..^~J~~:....\n"
								+ "..P?.....~7.7~:7..:~7?Y!~!~!..~?J7^:^~7J~^J?~7~...\n"
								+ "..!P......7J~.?^~7!~:.!~:^~7!:?J777?J!!?~^^^:!~...\n"
								+ "...YY.....?G:^Y7!:.....^!~.~55Y7!~JJ~~7~^~~~7!:...\n"
								+ "....P?...~?7^?7..........!!.5G?^:~!~77~^^^~!7!J:..\n"
								+ "....:Y?.:??^5?........:~~~!7Y7:^~!?J7!~~~~!!G!^:..\n"
								+ "......7Y57^Y5.........~Y7?7!~^~~!??~!?7~7:..P!....\n"
								+ ".......:7?JG~ ........?~::::^^~~^^!~..~!7!.JY.....\n"
								+ ".........:~??7~^:....~!.........:?!~...:^?57......\n"
								+ ".............^!7??7!!?::.....::^7?7~!7?7?!:.......\n"
								+ ".................:^~!!77777???7?Y7J?7!~:..........\n"
								+ "...........:^^^^^^^^^^^^^^~^^~~~~~^^^^............\n");
						Thread.sleep(200);
					} catch (InterruptedException e) {
						e.printStackTrace();
					}
				} else if (playMusic == 3) {
					mp3.play(comPath + "10_other.mp3");
				} else if (playMusic == 4) {
					System.out.println("     다음 문제로 넘어갑니다...     ");
					break;
				}
				if (answers(10, sc, cinemasList, mp3, comPath))
					break;
			}
			if (mp3.isPlaying()) {
				mp3.stop();
			}
			mp3.play(comPath + "closing.mp3");
			String[] gameEndList = new String[10];

			gameEndList[0] = "			 ██████╗  █████╗ ███╗   ███╗███████╗    ███████╗███╗   ██╗██████╗ ██╗    \n"
					+ "			██╔════╝ ██╔══██╗████╗ ████║██╔════╝    ██╔════╝████╗  ██║██╔══██╗██║    \n"
					+ "			██║  ███╗███████║██╔████╔██║█████╗      █████╗  ██╔██╗ ██║██║  ██║██║    \n"
					+ "			██║   ██║██╔══██║██║╚██╔╝██║██╔══╝      ██╔══╝  ██║╚██╗██║██║  ██║╚═╝    \n"
					+ "			╚██████╔╝██║  ██║██║ ╚═╝ ██║███████╗    ███████╗██║ ╚████║██████╔╝██╗    \n"
					+ "			 ╚═════╝ ╚═╝  ╚═╝╚═╝     ╚═╝╚══════╝    ╚══════╝╚═╝  ╚═══╝╚═════╝ ╚═╝    \n";

			gameEndList[1] = "			 ██████╗                                                                 \n"
					+ "			██╔════╝                                                                 \n"
					+ "			██║  ███╗                                                                \n"
					+ "			██║   ██║                                                                \n"
					+ "			╚██████╔╝                                                                \n"
					+ "			 ╚═════╝                                                                 \n";

			gameEndList[2] = "			          █████╗                                                         \n"
					+ "			         ██╔══██╗                                                        \n"
					+ "			         ███████║                                                        \n"
					+ "			         ██╔══██║                                                        \n"
					+ "			         ██║  ██║                                                        \n"
					+ "			         ╚═╝  ╚═╝                                                        \n";
			;

			gameEndList[3] = "			                 ███╗   ███╗                                             \n"
					+ "			                 ████╗ ████║                                             \n"
					+ "			                 ██╔████╔██║                                             \n"
					+ "			                 ██║╚██╔╝██║                                             \n"
					+ "			                 ██║ ╚═╝ ██║                                             \n"
					+ "			                 ╚═╝     ╚═╝                                             \n";
			;

			gameEndList[4] = "			                            ███████╗                                     \n"
					+ "			                            ██╔════╝                                     \n"
					+ "			                            █████╗                                       \n"
					+ "			                            ██╔══╝                                       \n"
					+ "			                            ███████╗                                     \n"
					+ "			                            ╚══════╝                                     \n";

			gameEndList[5] = "			                                        ███████╗                         \n"
					+ "			                                        ██╔════╝                         \n"
					+ "			                                        █████╗                           \n"
					+ "			                                        ██╔══╝                           \n"
					+ "			                                        ███████╗                         \n"
					+ "			                                        ╚══════╝                         \n";

			gameEndList[6] = "			                                                ███╗   ██╗               \n"
					+ "			                                                ████╗  ██║               \n"
					+ "			                                                ██╔██╗ ██║               \n"
					+ "			                                                ██║╚██╗██║               \n"
					+ "			                                                ██║ ╚████║               \n"
					+ "			                                                ╚═╝  ╚═══╝               \n";

			gameEndList[7] = "			                                                          ██████╗        \n"
					+ "			                                                          ██╔══██╗       \n"
					+ "			                                                          ██║  ██║       \n"
					+ "			                                                          ██║  ██║       \n"
					+ "			                                                          ██████╔╝       \n"
					+ "			                                                          ╚═════╝        \n";

			gameEndList[8] =

					"			                                                                  ██╗    \n"
							+ "			                                                                  ██║    \n"
							+ "			                                                                  ██║    \n"
							+ "			                                                                  ╚═╝    \n"
							+ "			                                                                  ██╗    \n"
							+ "			                                                                  ╚═╝    \n";

			gameEndList[9] = "			 ██████╗  █████╗ ███╗   ███╗███████╗    ███████╗███╗   ██╗██████╗ ██╗    \n"
					+ "			██╔════╝ ██╔══██╗████╗ ████║██╔════╝    ██╔════╝████╗  ██║██╔══██╗██║    \n"
					+ "			██║  ███╗███████║██╔████╔██║█████╗      █████╗  ██╔██╗ ██║██║  ██║██║    \n"
					+ "			██║   ██║██╔══██║██║╚██╔╝██║██╔══╝      ██╔══╝  ██║╚██╗██║██║  ██║╚═╝    \n"
					+ "			╚██████╔╝██║  ██║██║ ╚═╝ ██║███████╗    ███████╗██║ ╚████║██████╔╝██╗    \n"
					+ "			 ╚═════╝ ╚═╝  ╚═╝╚═╝     ╚═╝╚══════╝    ╚══════╝╚═╝  ╚═══╝╚═════╝ ╚═╝    \n";

			System.out.println();
			System.out.println();
			System.out.println();

			Thread.sleep(100);
			System.out.println();

			for (int i = 0; i < gameEndList.length; i++) {
				System.out.printf("\n\n\n\n\n\n\n\n\n\n\n%s\n\n\n\n\n\n\n\n\n\n\n", gameEndList[i]);
				Thread.sleep(500);
			}

			Thread.sleep(100);
			System.out.println();
			Thread.sleep(100);
			System.out.println();
			Thread.sleep(100);
			System.out.println();
			Thread.sleep(100);
			System.out.println();
			Thread.sleep(100);
			System.out.println();
			Thread.sleep(100);
			System.out.println();
			Thread.sleep(100);

			System.out.println(
					"       ================================================================================================================\n");
			Thread.sleep(200);
			System.out.println();
			Thread.sleep(200);
			System.out.println(
					"              MOVIE NAME                   YEAR                        TITLE                         ARTIST    ");
			Thread.sleep(200);
			System.out.println();
			System.out.println();
			System.out.println();
			Thread.sleep(200);
			for (int i = 0; i < cinemasList.size(); i++) {
				String mname = cinemasList.get(i).getMovieNameKR();
				int year = cinemasList.get(i).getYear();
				String title = cinemasList.get(i).getMovieSongName();
				String artist = cinemasList.get(i).getMovieSongArtist();
				Thread.sleep(200);
				System.out.println();
				Thread.sleep(200);
				System.out.println();
				Thread.sleep(200);
				System.out.println();
				Thread.sleep(200);
				System.out.println("          " + mname + "               " + year + "                " + title
						+ "             " + artist);
				Thread.sleep(200);
				System.out.println();
				Thread.sleep(200);
				System.out.println();
				Thread.sleep(200);
				System.out.println();
				Thread.sleep(200);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	private static int inputNum(Scanner sc) {
		System.out.println("      [1] 음악 재생     [2] 그림 힌트!     [3] 다른 구간 듣기      [4] 포기하고 다음문제  ");
		int playMusic = 0;
		try {
			playMusic = sc.nextInt();
		} catch (Exception e) {
			System.out.println(" 잘못 입력하셨습니다. ");
		}
		return playMusic;
	}

	private static void questions(int n) {
		System.out.printf("\n\n\n\n\n%s\n\n\n",
				"    ================================================================================= \n"
						+ "          ♪(^∇^*) ♩  ♪  ♬   ❁´◡`❁   [ " + n
						+ "번 문제!! ]      ♩  ♪     ♬ ヽ(✿ﾟ▽ﾟ)ノ              \n"
						+ "    ================================================================================= ");
	}

	private static boolean answers(int n, Scanner sc, ArrayList<CinemaField> cinemasList, MP3Player mp3,
			String comPath) {
		System.out.println("     정답을 입력하세요(한국어로) >>");
		String movieName = sc.next();

		if (movieName.equals(cinemasList.get(n - 1).getMovieNameKR().trim())) {
			System.out.println("     SUCCESS!      정 답 입 니 다!! ");
			System.out.println();
			mp3.play(comPath + "Verygood.mp3");
			System.out.println();
			System.out.println("     다음 문제로 넘어갑니다...     ");
			insertQuizResult("호구", "o", n);
			// break;
			return true;
		} else {
			System.out.println("     Fail...!      틀 렸 습 니 다... ");
			System.out.println();
			mp3.play(comPath + "Fail.mp3");
			insertQuizResult("호구", "x", n);
		}
		return false;
	}

	private static void insertQuizResult(String name, String ox, int q_no) {
		CinemaQuizDataTable.getInstance().insertQuizResult(name, ox, q_no);
	}

	private static void println(String str) {
		System.out.println(str);
	}

	private static void print(String str) {
		System.out.print(str);
	}
}
